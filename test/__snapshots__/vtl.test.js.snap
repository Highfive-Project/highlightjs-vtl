// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VTL syntax highlighting highlights syntax for basic/comments.vm 1`] = `
"<span class=\\"hljs-comment\\">## This is a single line comment.</span>

This is visible in the output <span class=\\"hljs-comment\\">## This is a comment.</span>


This is text that is outside the multi-line comment.
Online visitors can see it.

<span class=\\"hljs-comment\\">#*
  Thus begins a multi-line comment. Online visitors will not
  see this text because the Velocity Templating Engine will
  ignore it.
*#</span>

Here is text outside the multi-line comment; it is visible.


<span class=\\"hljs-comment\\">#**
This is a VTL comment block and
may be used to store such information
as the document author and versioning
information:
@author
@version 5
*#</span>"
`;

exports[`VTL syntax highlighting highlights syntax for basic/directives.vm 1`] = `
"<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$name</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;apple&quot;</span><span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#include</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-string\\">&quot;header.html&quot;</span><span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#parse</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-string\\">&quot;header.vm&quot;</span><span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#stop</span>


<span class=\\"hljs-title function_\\">#foreach</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$i</span> <span class=\\"hljs-keyword\\">in</span> <span class=\\"hljs-punctuation\\">[</span><span class=\\"hljs-number\\">1</span><span class=\\"hljs-operator\\">..</span><span class=\\"hljs-number\\">10</span><span class=\\"hljs-punctuation\\">]</span><span class=\\"hljs-punctuation\\">)</span>
  The count is <span class=\\"hljs-variable\\">$i</span>
<span class=\\"hljs-title function_\\">#end</span>

<span class=\\"hljs-title function_\\">#literal</span>
 This is a literal block of text
<span class=\\"hljs-title function_\\">#end</span>

<span class=\\"hljs-title function_\\">#if</span> <span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$fruit</span> <span class=\\"hljs-operator\\">=</span><span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;apple&quot;</span><span class=\\"hljs-punctuation\\">)</span>
  This is an apple.
<span class=\\"hljs-title function_\\">#else</span>
  This is not an apple.
<span class=\\"hljs-title function_\\">#end</span>


<span class=\\"hljs-title function_\\">#</span><span class=\\"hljs-punctuation\\">{</span>set<span class=\\"hljs-punctuation\\">}</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$name</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;apple&quot;</span><span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#</span><span class=\\"hljs-punctuation\\">{</span>foreach<span class=\\"hljs-punctuation\\">}</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$i</span> <span class=\\"hljs-keyword\\">in</span> <span class=\\"hljs-punctuation\\">[</span><span class=\\"hljs-number\\">1</span><span class=\\"hljs-operator\\">..</span><span class=\\"hljs-number\\">10</span><span class=\\"hljs-punctuation\\">]</span><span class=\\"hljs-punctuation\\">)</span>
 The count is <span class=\\"hljs-variable\\">$i</span>
<span class=\\"hljs-title function_\\">#</span><span class=\\"hljs-punctuation\\">{</span>end<span class=\\"hljs-punctuation\\">}</span>"
`;

exports[`VTL syntax highlighting highlights syntax for basic/escapes.vm 1`] = `
"\\\\
\\\\\\\\
\\\\#
\\\\$
\\\\#end
\\\\$a
\\\\# end"
`;

exports[`VTL syntax highlighting highlights syntax for basic/hello-world.vm 1`] = `
"<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$name</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Velocity&quot;</span> <span class=\\"hljs-punctuation\\">)</span>
Hello <span class=\\"hljs-variable\\">$name</span> World!"
`;

exports[`VTL syntax highlighting highlights syntax for basic/methods.vm 1`] = `
"<span class=\\"hljs-variable\\">$cart</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">calculateTotal</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-variable\\">$customer</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">updatePurchases</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$cart</span><span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-variable\\">$shop</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">checkInventory</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-variable\\">$cart</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">addTaxes</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-number\\">8</span><span class=\\"hljs-punctuation\\">,</span> <span class=\\"hljs-number\\">16</span><span class=\\"hljs-punctuation\\">)</span>

# Property access
<span class=\\"hljs-variable\\">$page</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">setTitle</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-string\\">&quot;My Home Page&quot;</span> <span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-variable\\">$customer</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">getAddress</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-variable\\">$purchase</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">getTotal</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-punctuation\\">)</span>"
`;

exports[`VTL syntax highlighting highlights syntax for basic/operators.vm 1`] = `
"<span class=\\"hljs-title function_\\">#set</span> <span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$a</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-literal\\">true</span><span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-title function_\\">#set</span> <span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$b</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-literal\\">false</span><span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#if</span> <span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$a</span> <span class=\\"hljs-operator\\">||</span> <span class=\\"hljs-variable\\">$b</span><span class=\\"hljs-punctuation\\">)</span>
  short version &#x27;or&#x27; was true
<span class=\\"hljs-title function_\\">#end</span>

<span class=\\"hljs-title function_\\">#if</span> <span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$a</span> <span class=\\"hljs-keyword\\">and</span> <span class=\\"hljs-variable\\">$b</span><span class=\\"hljs-punctuation\\">)</span>
  text version &#x27;and&#x27; was true
<span class=\\"hljs-title function_\\">#end</span>"
`;

exports[`VTL syntax highlighting highlights syntax for basic/properties.vm 1`] = `
"<span class=\\"hljs-variable\\">$customer</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">address</span>
<span class=\\"hljs-variable\\">$purchase</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">total</span>
<span class=\\"hljs-variable\\">$cart</span><span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">customerDiscount</span>


<span class=\\"hljs-variable\\">$</span><span class=\\"hljs-punctuation\\">{</span>customer<span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">address</span><span class=\\"hljs-punctuation\\">}</span>
<span class=\\"hljs-variable\\">$</span><span class=\\"hljs-punctuation\\">{</span>purchase<span class=\\"hljs-punctuation\\">.</span><span class=\\"hljs-property\\">getTotal</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-punctuation\\">)</span><span class=\\"hljs-punctuation\\">}</span>"
`;

exports[`VTL syntax highlighting highlights syntax for basic/string-interp.vm 1`] = `
"<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$size</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Big&quot;</span> <span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$name</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Ben&quot;</span> <span class=\\"hljs-punctuation\\">)</span>

The clock is <span class=\\"hljs-variable\\">$size</span><span class=\\"hljs-variable\\">$name</span>.


<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$size</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Big&quot;</span> <span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$name</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Ben&quot;</span> <span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$clock</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;<span class=\\"hljs-variable\\">$size</span><span class=\\"hljs-variable\\">$name</span>&quot;</span> <span class=\\"hljs-punctuation\\">)</span>

The clock is <span class=\\"hljs-variable\\">$clock</span>.


<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$size</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Big&quot;</span> <span class=\\"hljs-punctuation\\">)</span>
<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span> <span class=\\"hljs-variable\\">$name</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;Ben&quot;</span> <span class=\\"hljs-punctuation\\">)</span>

<span class=\\"hljs-title function_\\">#set</span><span class=\\"hljs-punctuation\\">(</span><span class=\\"hljs-variable\\">$clock</span> <span class=\\"hljs-operator\\">=</span> <span class=\\"hljs-string\\">&quot;<span class=\\"hljs-variable\\">$</span><span class=\\"hljs-punctuation\\">{</span>size<span class=\\"hljs-punctuation\\">}</span>Tall<span class=\\"hljs-variable\\">$name</span>&quot;</span> <span class=\\"hljs-punctuation\\">)</span>

The clock is <span class=\\"hljs-variable\\">$clock</span>."
`;

exports[`VTL syntax highlighting highlights syntax for basic/variables.vm 1`] = `
"<span class=\\"hljs-variable\\">$foo</span>
<span class=\\"hljs-variable\\">$bar</span>
<span class=\\"hljs-variable\\">$foo-bar</span>
<span class=\\"hljs-variable\\">$foo_bar</span>
<span class=\\"hljs-variable\\">$fooBar1</span>


<span class=\\"hljs-variable\\">$</span><span class=\\"hljs-punctuation\\">{</span>fruit<span class=\\"hljs-punctuation\\">}</span>"
`;
